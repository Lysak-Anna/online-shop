{"version":3,"file":"static/js/622.edfef382.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","pages/LoginPage/LoginPage.styled.js","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { FcGoogle } from \"react-icons/fc\";\nexport const GoogleIcon = styled(FcGoogle)`\n  position: absolute;\n  left: 10px;\n`;\nexport const FormContainer = styled.div`\n  display: inline-block;\n  background-color: #d2d3d3;\n  padding: 40px 20px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  display: block;\n  padding: 8px 12px;\n  margin-bottom: 20px;\n  min-width: 250px;\n  height: 30px;\n  border-radius: 4px;\n  border: 1px solid #555759;\n  outline: transparent;\n  :hover,\n  :focus {\n    border-color: #9615db;\n  }\n`;\nexport const FormButton = styled.button`\n  min-width: 250px;\n  height: 30px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  font-weight: 600;\n  cursor: pointer;\n  background-color: #9615db;\n  border-color: transparent;\n`;\nexport const Line = styled.p`\n  position: relative;\n  text-align: center;\n  margin-bottom: 20px;\n  ::before {\n    position: absolute;\n    content: \"\";\n    display: block;\n    border: 1px solid #555759;\n    width: 110px;\n    bottom: 6px;\n  }\n  ::after {\n    position: absolute;\n    content: \"\";\n    display: block;\n    border: 1px solid #555759;\n    width: 110px;\n    bottom: 6px;\n    right: 0;\n  }\n`;\nexport const GoogleButton = styled.button`\n  position: relative;\n  min-width: 250px;\n  height: 30px;\n  border-radius: 4px;\n  border-color: transparent;\n\n  font-weight: 600;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { app } from '../../base/base';\nimport { setUser } from '../../redux/user/userSlice';\nimport {\n  FormContainer,\n  Input,\n  FormButton,\n  Line,\n  GoogleButton,\n  GoogleIcon,\n} from './Form.styled';\n\nexport default function Form({ title, handleClick }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = getAuth(app);\n  const provider = new GoogleAuthProvider();\n  const dispatch = useDispatch();\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then(({ user }) =>\n        dispatch(\n          setUser({\n            email: user.email,\n            id: user.uid,\n            token: user.accessToken,\n          })\n        )\n      )\n      .catch(error =>\n        toast.error('Something went wrong... Please, try to sign in with email')\n      );\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <label>\n          <Input\n            type=\"email\"\n            value={email}\n            onChange={event => setEmail(event.target.value)}\n            placeholder=\"Email\"\n          ></Input>\n        </label>\n        <label>\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={event => setPassword(event.target.value)}\n            placeholder=\"Password\"\n          ></Input>\n        </label>\n        <FormButton\n          type=\"button\"\n          onClick={() => handleClick(email, password, setEmail, setPassword)}\n        >\n          {title}\n        </FormButton>\n        <Line>or</Line>\n        <GoogleButton type=\"button\" onClick={() => signInWithGoogle()}>\n          <GoogleIcon /> Continue with Google\n        </GoogleButton>\n      </FormContainer>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.section`\n  padding: 40px;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n`;\nexport const StyledLink = styled(Link)`\n  margin-left: 10px;\n  color: #9615db;\n`;\n","import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport Form from '../../components/Form/Form';\nimport { setUser } from '../../redux/user/userSlice';\nimport { Container, Title, StyledLink } from '../LoginPage/LoginPage.styled';\n\nexport default function SignUpPage() {\n  const dispatch = useDispatch();\n  const handleSignUp = (email, password, setEmail, setPassword) => {\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(({ user }) =>\n        dispatch(\n          setUser({\n            email: user.email,\n            id: user.uid,\n            token: user.accessToken,\n          })\n        )\n      )\n      .catch(error => {\n        toast.error('Invalid email or password');\n      })\n      .finally(() => {\n        setEmail('');\n        setPassword('');\n      });\n  };\n  return (\n    <Container>\n      <Title>Sign up</Title>\n      <Form title=\"Sign up\" handleClick={handleSignUp} />\n      <p>\n        Already have an account?\n        <StyledLink to=\"/login\">Sign in</StyledLink>\n      </p>\n    </Container>\n  );\n}\n"],"names":["GoogleIcon","styled","FcGoogle","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","Input","_templateObject3","FormButton","_templateObject4","Line","_templateObject5","GoogleButton","_templateObject6","Form","_ref","title","handleClick","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","auth","getAuth","app","provider","GoogleAuthProvider","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","type","value","onChange","event","target","placeholder","onClick","signInWithPopup","then","_ref2","user","setUser","id","uid","token","accessToken","catch","error","toast","Container","Title","StyledLink","Link","SignUpPage","createUserWithEmailAndPassword","finally","to"],"sourceRoot":""}